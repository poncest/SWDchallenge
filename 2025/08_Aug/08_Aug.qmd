---
title: "SPR Consulting Data Visualization Style Guide"
subtitle: "Establishing Clear, Consistent, and Branded Graphing Practices"
author: "SPR Consulting"
date: "2025-08-01" 
abstract: "DISCLAIMER: this guide is for training purposes only: AUGUST 2025 #SWDchallenge"
description: "A branded data visualization style guide defining fonts, colors, and chart conventions for SPR Consulting."
keywords: ["data visualization", "style guide", "branding", "SPR Consulting"]
lang: en
format:
  html:
    theme: [default]
    toc: true
    toc-depth: 2
    code-fold: true
    code-summary: "Show R Code"
    embed-resources: true
    fig-width: 10
    fig-height: 6
    smooth-scroll: true
    lightbox: true
    warning: false
    message: false
  pdf:
    toc: true
    toc-depth: 2
    code-fold: false
    fig-width: 8
    fig-height: 5
    warning: false
    message: false
    geometry: margin=0.8in
    fontsize: 11pt
    colorlinks: true
    linkcolor: blue
  pptx:
    incremental: true 
---

```{css, echo=FALSE}
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@400;500;600&family=Inter:wght@300;400;500;600&display=swap');

.title {
  font-family: 'Oswald', sans-serif;
  font-weight: 600;
  color: #1e3a8a;
  text-align: center;
}

.subtitle {
  font-family: 'Inter', sans-serif;
  font-weight: 400;
  color: #64748b;
  text-align: center;
}

body {
  font-family: 'Inter', sans-serif;
  line-height: 1.6;
}

h1, h2, h3, h4 {
  font-family: 'Oswald', sans-serif;
  color: #1e3a8a;
}

.spr-logo {
  text-align: center;
  margin: 30px 0;
}

.logo-design {
  font-family: 'Oswald', sans-serif;
  font-size: 3rem;
  font-weight: 600;
  color: #1e3a8a;
  letter-spacing: 0.1em;
  margin-bottom: 0.5rem;
}

.logo-tagline {
  font-family: 'Inter', sans-serif;
  font-size: 1rem;
  color: #0891b2;
  letter-spacing: 0.05em;
}

.do-dont-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin: 20px 0;
}

.do-box {
  background: #dcfce7;
  border: 2px solid #16a34a;
  border-radius: 8px;
  padding: 15px;
}

.dont-box {
  background: #fef2f2;
  border: 2px solid #dc2626;
  border-radius: 8px;
  padding: 15px;
}

.do-title {
  color: #166534;
  font-weight: 600;
  margin-bottom: 10px;
}

.dont-title {
  color: #991b1b;
  font-weight: 600;
  margin-bottom: 10px;
}
```

::: {.spr-logo}
::: {.logo-design}
SPR
:::
::: {.logo-tagline}
STRATEGIC • PERFORMANCE • RESULTS
:::
:::

```{r setup, include=FALSE}
# Load required libraries
library(ggplot2)
library(dplyr)
library(scales)
library(grid)
library(gridExtra)

# Set default ggplot2 theme
theme_set(theme_minimal())
```

```{r spr-colors, echo=TRUE}
# SPR Consulting Color Palette
spr_colors <- list(
  # Primary colors
  navy = "#1e3a8a",
  teal = "#0891b2", 
  orange = "#f97316",
  
  # Categorical palette
  categorical = c("#0891b2", "#1e3a8a", "#f97316", "#84cc16", "#8b5cf6"),
  
  # Sequential palette (light to dark teal)
  sequential = c("#e0f2fe", "#7dd3fc", "#0891b2", "#0e7490", "#164e63"),
  
  # Supporting colors
  gray = "#64748b",
  light_gray = "#e2e8f0",
  success = "#16a34a",
  alert = "#dc2626"
)

# SPR ggplot2 theme - PDF compatible
theme_spr <- function(base_size = 12) {
  theme_minimal(base_size = base_size) +
  theme(
    # Text elements - using default fonts for PDF compatibility
    text = element_text(color = spr_colors$navy),
    plot.title = element_text(
      size = rel(1.5), 
      face = "bold",
      color = spr_colors$navy,
      margin = margin(b = 20)
    ),
    plot.subtitle = element_text(
      size = rel(1.1),
      color = spr_colors$gray,
      margin = margin(b = 20)
    ),
    plot.caption = element_text(
      size = rel(0.8),
      color = spr_colors$gray,
      hjust = 0
    ),
    
    # Axis elements
    axis.title = element_text(size = rel(0.9), color = spr_colors$navy),
    axis.text = element_text(size = rel(0.8), color = spr_colors$navy),
    axis.line = element_line(color = spr_colors$gray, size = 0.5),
    
    # Grid lines
    panel.grid.major = element_line(color = spr_colors$light_gray, size = 0.5),
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    
    # Legend
    legend.title = element_text(size = rel(0.9), color = spr_colors$navy),
    legend.text = element_text(size = rel(0.8), color = spr_colors$navy),
    legend.position = "top",
    
    # Background
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    
    # Margins
    plot.margin = margin(20, 20, 20, 20)
  )
}

# Function to display color palette - PDF compatible
show_colors <- function(colors, names = NULL) {
  n <- length(colors)
  if (is.null(names)) names <- paste("Color", 1:n)

  data.frame(
    x = 1:n,
    y = 1,
    color = colors,
    name = names
  ) |>
    ggplot(aes(x = x, y = y, fill = color)) +
    geom_tile(width = 0.8, height = 0.8, color = "white", size = 2) +
    geom_text(aes(x = x, y = 0.5, label = name),
      color = "black", size = 3
    ) +
    geom_text(aes(x = x, y = 0.2, label = color),
      color = "black", size = 2.5
    ) +
    scale_fill_identity() +
    scale_x_continuous(expand = c(0.1, 0.1)) +
    scale_y_continuous(expand = c(0.2, 0.2)) +
    theme_void() +
    theme(plot.margin = margin(10, 10, 10, 10))
}
```

## Overview

This style guide establishes consistent standards for data visualizations across SPR Consulting. Our approach balances professional credibility with modern design principles to create clear, impactful visual stories for our clients.

### Core Principles

- **Clarity First**: Every chart should communicate its message immediately
- **Professional Consistency**: Maintain SPR brand standards across all materials  
- **Accessibility**: Ensure visualizations are readable by all audiences
- **Purposeful Design**: Remove elements that don't support the story

---

## Brand Elements

### Typography

Our typography system uses two Google Fonts that balance professionalism with readability:

- **Oswald** - Headings & Titles (*Used for chart titles, section headers, and emphasis*)
- **Inter** - Body Text & Labels (*Used for descriptions, axis labels, and annotations*)

#### Font Hierarchy

| Element | Font | Size | Weight |
|---------|------|------|--------|
| Chart Title | Oswald | 18-24px | Semi-bold (600) |
| Chart Subtitle | Inter | 14-16px | Regular (400) |
| Axis Labels | Inter | 12-14px | Regular (400) |
| Data Labels | Inter | 11-13px | Medium (500) |
| Annotations | Inter | 10-12px | Regular (400) |

### Logo Usage

The SPR logo should be placed consistently across all visualizations:

- **Primary position**: Top-right corner
- **Alternative**: Bottom-right for presentations  
- **Minimum spacing**: 20px from chart elements
- **Size**: Maximum 15% of chart width

---

## Color System

SPR Consulting uses a modern blue-teal palette that conveys trust, innovation, and professionalism.

### Primary Colors

```{r primary-colors, echo=FALSE, fig.height=2}
primary_colors <- c(spr_colors$navy, spr_colors$teal, spr_colors$orange)
primary_names <- c("SPR Navy\n#1e3a8a", "SPR Teal\n#0891b2", "Accent Orange\n#f97316")
show_colors(primary_colors, primary_names)
```

### Categorical Palette

Use this palette in order for charts with multiple categories (maximum 5):

```{r categorical-colors, echo=FALSE, fig.height=2}
cat_names <- c("Primary\n#0891b2", "Secondary\n#1e3a8a", "Tertiary\n#f97316", 
               "Quaternary\n#84cc16", "Quinary\n#8b5cf6")
show_colors(spr_colors$categorical, cat_names)
```

### Sequential Palette

For continuous data visualization (light to dark progression):

```{r sequential-colors, echo=FALSE, fig.height=2}
seq_names <- c("Light\n#e0f2fe", "Med Light\n#7dd3fc", "Medium\n#0891b2", 
               "Med Dark\n#0e7490", "Dark\n#164e63")
show_colors(spr_colors$sequential, seq_names)
```

### Supporting Colors

```{r supporting-colors, echo=FALSE, fig.height=2}
support_colors <- c(spr_colors$gray, spr_colors$light_gray, spr_colors$alert, spr_colors$success)
support_names <- c("Neutral Gray\n#64748b", "Light Gray\n#e2e8f0", 
                   "Alert Red\n#dc2626", "Success Green\n#16a34a")
show_colors(support_colors, support_names)
```

---

## Chart Types & Examples

### Bar Charts

**Best for**: Comparing categories, showing rankings, displaying survey results

```{r bar-chart-data}
# Create sample quarterly revenue data
quarterly_revenue <- data.frame(
  quarter = c("Q1 2024", "Q2 2024", "Q3 2024", "Q4 2024"),
  revenue = c(2.3, 2.8, 2.1, 3.2),
  stringsAsFactors = FALSE
)

# Department performance data
dept_performance <- data.frame(
  department = c("Sales", "Marketing", "Operations", "Customer Service"),
  score = c(87, 72, 81, 89),
  stringsAsFactors = FALSE
) |>
  arrange(desc(score))
```

#### Column Chart Example

```{r column-chart, fig.height=5}
quarterly_revenue |>
  ggplot(aes(x = quarter, y = revenue)) +
  geom_col(fill = spr_colors$teal, width = 0.6) +
  geom_text(aes(label = paste0("$", revenue, "M")),
    vjust = -0.5, size = 4, color = spr_colors$navy
  ) +
  labs(
    title = "Quarterly Revenue Performance",
    subtitle = "Strong Q4 finish with 43% growth over Q3",
    x = "Quarter",
    y = "Revenue (Millions USD)",
    caption = "Source: SPR Financial Reporting | Data as of Dec 2024"
  ) +
  scale_y_continuous(
    labels = scales::dollar_format(suffix = "M"),
    expand = expansion(mult = c(0, 0.1))
  ) +
  theme_spr()
```

#### Horizontal Bar Chart Example

```{r horizontal-bar, fig.height=4}
dept_performance |>
  mutate(department = factor(department, levels = department)) |>
  ggplot(aes(x = score, y = department)) +
  geom_col(fill = spr_colors$teal, width = 0.6) +
  geom_text(aes(label = paste0(score, "%")),
    hjust = -0.1, size = 4, color = spr_colors$navy
  ) +
  labs(
    title = "Department Performance Scores",
    subtitle = "Customer Service leads with 89% satisfaction rating",
    x = "Performance Score (%)",
    y = NULL,
    caption = "Source: SPR Internal Assessment | Q4 2024"
  ) +
  scale_x_continuous(
    labels = scales::percent_format(scale = 1),
    expand = expansion(mult = c(0, 0.15))
  ) +
  theme_spr()
```

### Line Charts

**Best for**: Showing trends over time, comparing multiple series

```{r line-chart-data}
# Create monthly trend data
monthly_metrics <- data.frame(
  month = rep(month.abb[1:12], 3),
  metric = rep(c("Client Acquisition", "Client Retention", "Revenue Growth"), each = 12),
  value = c(
    # Client Acquisition (%)
    c(15, 18, 22, 25, 28, 32, 35, 38, 42, 45, 48, 52),
    # Client Retention (%)
    c(85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98),
    # Revenue Growth (%)
    c(8, 12, 15, 18, 22, 25, 28, 30, 33, 35, 38, 42)
  ),
  stringsAsFactors = FALSE
) |>
  mutate(
    month = factor(month, levels = month.abb[1:12]),
    metric = factor(metric)
  )
```

```{r line-chart, fig.height=5}
monthly_metrics |>
  ggplot(aes(x = month, y = value, color = metric, group = metric)) +
  geom_line(linewidth = 1, alpha = 0.9) +
  geom_point(size = 3, alpha = 0.9) +
  labs(
    title = "2024 Key Performance Indicators",
    subtitle = "Consistent growth across all major metrics throughout the year",
    x = "Month",
    y = "Percentage (%)",
    color = "Metric",
    caption = "Source: SPR Analytics Dashboard | Updated monthly"
  ) +
  scale_color_manual(values = spr_colors$categorical[1:3]) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  theme_spr() +
  theme(legend.position = "top")
```

### Scatter Plots

**Best for**: Showing correlations, identifying outliers

```{r scatter-data}
# Create client analysis data
set.seed(42)
client_analysis <- data.frame(
  client_size = rnorm(50, 100, 30),
  satisfaction = rnorm(50, 85, 8),
  industry = sample(c("Technology", "Healthcare", "Finance", "Manufacturing"), 50, replace = TRUE),
  stringsAsFactors = FALSE
) |>
  mutate(
    client_size = pmax(20, client_size),
    satisfaction = pmax(60, pmin(100, satisfaction))
  )
```

```{r scatter-plot, fig.height=5}
client_analysis |>
  ggplot(aes(x = client_size, y = satisfaction, color = industry)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = spr_colors$navy, linetype = "dashed", linewidth = 1) +
  labs(
    title = "Client Size vs. Satisfaction Score",
    subtitle = "Positive correlation between client size and satisfaction ratings",
    x = "Client Size (Employees)",
    y = "Satisfaction Score",
    color = "Industry",
    caption = "Source: SPR Client Survey 2024 | n=50 clients"
  ) +
  scale_color_manual(values = spr_colors$categorical[1:4]) +
  scale_x_continuous(labels = scales::comma_format()) +
  theme_spr() +
  theme(legend.position = "top")
```

### Stacked Bar Charts (Part-to-Whole)

**Best for**: Part-to-whole relationships, revenue breakdowns, showing proportions in a single bar

```{r parttowhole-data}
# Revenue by service line
service_revenue <- data.frame(
  service = c("Strategy Consulting", "Operations", "Technology", "Analytics", "Other"),
  revenue = c(45, 25, 15, 10, 5),
  stringsAsFactors = FALSE
) %>%
  arrange(desc(revenue)) %>%
  mutate(
    service = factor(service, levels = rev(service)),  # Reverse for stacking order
    # Calculate positions for labels
    cumsum_rev = cumsum(revenue),
    pos = cumsum_rev - revenue/2
  )
```

```{r stacked-bar, fig.height=3}
# Create stacked horizontal bar chart
service_revenue %>%
  ggplot(aes(x = revenue, y = "Total Revenue", fill = service)) +
  geom_col(width = 0.6, color = "white", size = 1) +
  geom_text(aes(x = pos, label = paste0(revenue, "%")), 
            color = "white", size = 4, fontface = "bold") +
  labs(
    title = "Revenue Distribution by Service Line",
    subtitle = "Strategy Consulting represents 45% of total revenue",
    x = "Percentage of Total Revenue (%)",
    y = NULL,
    fill = "Service Line",
    caption = "Source: SPR Financial Analysis | FY 2024"
  ) +
  scale_fill_manual(values = rev(spr_colors$categorical)) +
  scale_x_continuous(
    labels = scales::percent_format(scale = 1),
    expand = expansion(mult = c(0, 0.05)),
    limits = c(0, 100)
  ) +
  theme_spr() +
  theme(
    axis.text.y = element_blank(),
    legend.position = "bottom",
    legend.direction = "horizontal"
  ) +
  guides(fill = guide_legend(reverse = TRUE))
```

---

## Do's and Don'ts

::: {.do-dont-container}
::: {.do-box}
::: {.do-title}
✓ DO
:::

- Use consistent SPR colors across related charts
- Include clear, descriptive titles with bold formatting
- Start bar charts at zero baseline
- Label axes with appropriate units
- Keep legends simple and positioned consistently
- Use direct labeling when space allows
- Maintain adequate white space around elements
- Include data sources and timestamps
- Test visualizations for colorblind accessibility
:::

::: {.dont-box}
::: {.dont-title}
✗ DON'T
:::

- Use more than 5 colors in a single chart
- Rotate axis labels unless absolutely necessary  
- Add 3D effects or unnecessary visual elements
- Create pie charts with more than 5 segments
- Rely solely on red/green color differences
- Include chartjunk or decorative elements
- Make text smaller than 10px
- Truncate axes without clear indication
- Use colors outside the SPR palette
:::
:::

---

## Implementation Guide

### Using the SPR Theme in R

```{r implementation-example, eval=FALSE}
# Load the SPR color palette and theme
source("spr_theme.R")  # Contains spr_colors and theme_spr()

# Create a basic chart with SPR styling
your_data |>
  ggplot(aes(x = category, y = value)) +
  geom_col(fill = spr_colors$teal) +
  labs(title = "Your Chart Title") +
  theme_spr()

# For multiple categories, use the categorical palette
ggplot(data, aes(x = x, y = y, fill = category)) +
  geom_col() +
  scale_fill_manual(values = spr_colors$categorical) +
  theme_spr()
```

### Quick Reference Checklist

Before publishing any visualization, verify:

- [ ] **Title**: Clear, descriptive, uses bold formatting
- [ ] **Colors**: Follow SPR palette, maximum 5 categories  
- [ ] **Typography**: Consistent hierarchy, readable sizes
- [ ] **Axes**: Properly labeled with units, appropriate baselines
- [ ] **Legend**: Positioned consistently, only when needed
- [ ] **Accessibility**: Meets contrast requirements, colorblind-friendly
- [ ] **Branding**: SPR logo properly placed
- [ ] **Source**: Data source and date clearly cited
- [ ] **Theme**: Uses theme_spr() for consistency

### Tools & Software

**Recommended for Implementation:**
- **Primary**: R with ggplot2 (using theme_spr())
- **Business Intelligence**: Tableau, Power BI  
- **Design**: Figma, Adobe Illustrator for mockups
- **Code**: RStudio, VS Code with Quarto extension

### File Specifications

- **Resolution**: 300 DPI for print, 72 DPI for digital
- **Formats**: PNG for web, PDF for print, SVG for scalable graphics  
- **Dimensions**: 16:9 ratio for presentations, 4:3 for reports
- **Fonts**: System defaults ensure compatibility across platforms

---

*Last updated: August 2025 | SPR Consulting Brand Standards*  
*Questions? Contact the Marketing & Communications team*